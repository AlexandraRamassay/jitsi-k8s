apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: jibri
  name: jibri
spec:
  selector:
    matchLabels:
      app: jibri
  strategy:
    rollingUpdate:
      maxSurge: 25%
      maxUnavailable: 1
    type: RollingUpdate
  template:
    metadata:
      annotations:
      labels:
        app: jibri
    spec:
      serviceAccountName: jibri
      containers:
      - image: fundocker/jibri-pulseaudio:main
        name: jibri
        imagePullPolicy: Always
        lifecycle:
          preStop:
            exec:
              # We don't want kubernetes to send the TERM signal to the main
              # process of this container, because it's S6 supervisor and it
              # will stop all services. Instead, we want to initiate a graceful
              # shutdown of jibri, and wait until it finishes by itself.
              # The waiting phase is important here, because when the preStop hook
              # exits, kubernetes sends immediately a TERM signal to the container.
              #
              # For more details:
              # https://kubernetes.io/docs/concepts/containers/container-lifecycle-hooks/#container-hooks
              # https://skarnet.org/software/s6/s6-svwait.html
              command: [
                 "/bin/sh",
                 "-c",
                 "/opt/jitsi/jibri/graceful_shutdown.sh ; s6-svwait -d /var/run/s6/services/*"
              ]
        livenessProbe:
          failureThreshold: 5
          httpGet:
            path: /jibri/api/v1.0/health
            port: 2222
            scheme: HTTP
          initialDelaySeconds: 15
          periodSeconds: 10
          successThreshold: 1
          timeoutSeconds: 2
        ports:
        - containerPort: 8822
          name: metrics
          protocol: TCP
        - containerPort: 2222
          name: api
          protocol: TCP
        readinessProbe:
          failureThreshold: 3
          httpGet:
            path: /jibri/api/v1.0/health
            port: 2222
            scheme: HTTP
          periodSeconds: 10
          successThreshold: 1
          timeoutSeconds: 2
        resources:
          limits:
            cpu: 2000m
            memory: 5000Mi
          requests:
            cpu: 2000m
            memory: 5000Mi
        securityContext:
          capabilities:
            add:
            - NET_BIND_SERVICE
            - SYS_ADMIN
        envFrom:
          - secretRef:
              name: jitsi-secrets
          - configMapRef:
              name: jitsi-config
        volumeMounts:
        - name: shm
          mountPath: /dev/shm
        - name: jibri-config
          mountPath: /config
      - image: prayagsingh/prometheus-jibri-exporter:1.3.0
        name: exporter
        imagePullPolicy: Always
        livenessProbe:
          failureThreshold: 5
          httpGet:
            path: /metrics
            port: 9889
            scheme: HTTP
          initialDelaySeconds: 15
          periodSeconds: 10
          successThreshold: 1
          timeoutSeconds: 5
        ports:
        - containerPort: 9889
          name: exporter
          protocol: TCP
      - image: python:3.8
        name: jibri-deletion-cost-updater
        command: [ "python3" ]
        args: [ "/opt/jibri-deletion-cost-updater/jibri-deletion-cost-updater.py" ]
        volumeMounts:
        - name: jibri-deletion-cost-updater
          mountPath: /opt/jibri-deletion-cost-updater
      restartPolicy: Always
      securityContext: {}
      # When a deployment is scaled down, we cannot chose wisely which
      # pod we want to terminate. So, when HPA scales down jibri, it might
      # choose to terminate an active jibri instance.
      # In this case, a graceful shutdown is initiated to inform the jibri
      # instance to shut down when its current task is completed.
      # Kubernetes will wait terminationGracePeriodSeconds before killing
      # the pod with a SIGKILL.
      #
      # The default terminationGracePeriodSeconds is 30s.
      # We want to define a much longer grace period to let the recording session
      # complete.
      #
      # For more details, see:
      # https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle/#pod-termination
      terminationGracePeriodSeconds: 86400
      volumes:
      - name: shm
        hostPath:
          path: /dev/shm
      - name: jibri-config
        emptyDir: {}
      - name: jibri-deletion-cost-updater
        configMap:
          name: jibri-deletion-cost-updater
